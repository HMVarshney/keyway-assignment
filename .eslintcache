[{"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/home/home.js":"1","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/App.js":"2","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/createPost.js":"3","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/CreatePostForm.js":"4","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/createPost.js":"5","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authContext.js":"6","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/index.js":"7","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/constants.js":"8","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authActions.js":"9","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/login.js":"10","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/register.js":"11","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/PostCard.js":"12","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/listPosts.js":"13","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/getPosts.js":"14","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/postDisplay.js":"15","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/navbar/Navbar.js":"16"},{"size":238,"mtime":1606333891894,"results":"17","hashOfConfig":"18"},{"size":1659,"mtime":1606466294486,"results":"19","hashOfConfig":"18"},{"size":527,"mtime":1606425155072,"results":"20","hashOfConfig":"18"},{"size":3118,"mtime":1606425216550,"results":"21","hashOfConfig":"18"},{"size":466,"mtime":1606402061901,"results":"22","hashOfConfig":"18"},{"size":3670,"mtime":1606464916787,"results":"23","hashOfConfig":"18"},{"size":219,"mtime":1606333448584,"results":"24","hashOfConfig":"18"},{"size":180,"mtime":1606464792702,"results":"25","hashOfConfig":"18"},{"size":1354,"mtime":1606401759738,"results":"26","hashOfConfig":"18"},{"size":2997,"mtime":1606425769735,"results":"27","hashOfConfig":"18"},{"size":3424,"mtime":1606425769743,"results":"28","hashOfConfig":"18"},{"size":2817,"mtime":1606427153496,"results":"29","hashOfConfig":"18"},{"size":1592,"mtime":1606427153536,"results":"30","hashOfConfig":"18"},{"size":782,"mtime":1606426347140,"results":"31","hashOfConfig":"18"},{"size":1642,"mtime":1606428520887,"results":"32","hashOfConfig":"18"},{"size":1937,"mtime":1606427747197,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jiqknd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/home/home.js",[],["71","72"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/App.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/createPost.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/CreatePostForm.js",[],["73","74"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/createPost.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authContext.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/index.js",[],["75","76"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/constants.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authActions.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/login.js",["77"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/register.js",["78"],"import React, { useContext, useRef } from 'react';\nimport styles from './Login.module.css';\nimport Form from '@bit/react-bootstrap.react-bootstrap.form';\nimport Button from '@bit/semantic-org.semantic-ui-react.button';\nimport { AuthContext } from '../../context/authenticationContext/authContext';\nimport Alert from '@bit/react-bootstrap.react-bootstrap.alert';\nimport { Link } from 'react-router-dom';\n\nconst Register = () => {\n\n    const { authStatus, register } = useContext(AuthContext);\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const usernameRef = useRef();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await register(usernameRef.current.value, emailRef.current.value, passwordRef.current.value);\n\n        emailRef.current.disabled = true; passwordRef.current.disabled = true; usernameRef.current.disabled = true;\n    }\n\n    return (\n        <div className={styles.container}>\n            <div style={{ height: '80vh' }} className='d-flex justify-content-center align-items-center flex-column'>\n                <div className={styles.loginBox}>\n                    <Form onSubmit={(e) => handleSubmit(e)}>\n                        <Form.Group>\n                            <Form.Label htmlFor='username'>Username</Form.Label>\n                            <Form.Control id='username' type='text' required ref={usernameRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label htmlFor='email'>Email</Form.Label>\n                            <Form.Control id='email' type='email' required ref={emailRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label htmlFor='email'>Password</Form.Label>\n                            <Form.Control id='password' type='password' required ref={passwordRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button loading={authStatus.isVerifying} disabled={authStatus.isVerifying} fluid type='submit' color='blue'>Register</Button>\n                        </Form.Group>\n                    </Form>\n                    <div className='mt-5'>\n                        <div className='d-flex flex-column justify-content-center'>\n                            <div>\n                                <p>Already have an account?</p>\n                                <Link to='/login'><a href='#'>Login</a></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {authStatus.isAuthenticated &&\n                    <div className='mt-4'>\n                        <Alert variant='success'>\n                            <p className='pr-2 pl-2'>Register Successfull! You're now Logged In.</p>\n                        </Alert>\n                    </div>\n                }\n                {authStatus.authenticationError &&\n                    <div className='mt-4'>\n                        <Alert variant='danger'>\n                            <p className='pr-2 pl-2'>There was a problem registering. Try again.</p>\n                        </Alert>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Register;","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/PostCard.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/listPosts.js",["79"],"import React, { useContext, useEffect, useState } from 'react';\nimport { getAllPosts } from '../../api/getPosts';\nimport PostCard from '../../components/posts/PostCard';\nimport { AuthContext } from '../../context/authenticationContext/authContext';\n\nconst ListPosts = () => {\n\n    const { authStatus } = useContext(AuthContext);\n\n    const [posts, setPosts] = useState({\n        loading: false,\n        posts: [],\n        error: null\n    });\n    const [loadAgain, setLoadAgain] = useState(false);\n\n    useEffect(() => {\n        setPosts((current) => ({ ...current, loading: true }));\n        (async () => {\n            const response = await getAllPosts(authStatus.jwt);\n\n            if (response?.status === 200) {\n                // console.log(response.data);\n                const myPosts = response.data.filter((post) => post.author._id === authStatus.userDetails._id)\n                setPosts({ loading: false, posts: myPosts, error: null });\n                return;\n            }\n\n            setPosts({ loading: false, posts: [], error: response });\n            return;\n        })();\n    }, [loadAgain]);\n\n    return (\n        <div className='container'>\n            <h2 className='p-3 text-center mt-3'>My Posts</h2>\n            <div className='row no-gutters justify-content-center'>\n                {posts.posts.map((post) => (\n                    <div className='col-10' key={post._id}>\n                        <PostCard post={post} setLoadAgain={setLoadAgain} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default ListPosts;","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/getPosts.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/postDisplay.js",["80","81"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/navbar/Navbar.js",["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"84","replacedBy":"90"},{"ruleId":"86","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":44,"column":54,"nodeType":"94","endLine":44,"endColumn":66},{"ruleId":"92","severity":1,"message":"93","line":49,"column":51,"nodeType":"94","endLine":49,"endColumn":63},{"ruleId":"95","severity":1,"message":"96","line":32,"column":8,"nodeType":"97","endLine":32,"endColumn":19,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"103","line":30,"column":8,"nodeType":"97","endLine":30,"endColumn":10,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"93","line":23,"column":45,"nodeType":"94","endLine":23,"endColumn":57},{"ruleId":"92","severity":1,"message":"93","line":28,"column":45,"nodeType":"94","endLine":28,"endColumn":57},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],["105"],["106"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authStatus.jwt' and 'authStatus.userDetails._id'. Either include them or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'PostCard' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'authStatus.jwt' and 'props.match.params.id'. Either include them or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [authStatus.jwt, authStatus.userDetails._id, loadAgain]",{"range":"113","text":"114"},"Update the dependencies array to be: [authStatus.jwt, props.match.params.id]",{"range":"115","text":"116"},[1099,1110],"[authStatus.jwt, authStatus.userDetails._id, loadAgain]",[908,910],"[authStatus.jwt, props.match.params.id]"]