[{"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/home/home.js":"1","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/App.js":"2","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/createPost.js":"3","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/CreatePostForm.js":"4","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/createPost.js":"5","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authContext.js":"6","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/index.js":"7","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/constants.js":"8","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authActions.js":"9","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/login.js":"10","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/register.js":"11","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/PostCard.js":"12","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/listPosts.js":"13","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/getPosts.js":"14","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/postDisplay.js":"15","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/navbar/Navbar.js":"16","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/editPost.js":"17","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/editPost.js":"18","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/EditPostForm.js":"19","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/PrivateRoute.js":"20","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/loader/Loader.js":"21"},{"size":1883,"mtime":1606468456538,"results":"22","hashOfConfig":"23"},{"size":2033,"mtime":1606586322018,"results":"24","hashOfConfig":"23"},{"size":555,"mtime":1606563864199,"results":"25","hashOfConfig":"23"},{"size":3071,"mtime":1606722549019,"results":"26","hashOfConfig":"23"},{"size":461,"mtime":1606722473622,"results":"27","hashOfConfig":"23"},{"size":4238,"mtime":1606730240705,"results":"28","hashOfConfig":"23"},{"size":219,"mtime":1606333448584,"results":"29","hashOfConfig":"23"},{"size":235,"mtime":1606730398123,"results":"30","hashOfConfig":"23"},{"size":1618,"mtime":1606419131958,"results":"31","hashOfConfig":"23"},{"size":3262,"mtime":1606722232541,"results":"32","hashOfConfig":"23"},{"size":3598,"mtime":1606564416861,"results":"33","hashOfConfig":"23"},{"size":2402,"mtime":1606564323300,"results":"34","hashOfConfig":"23"},{"size":2424,"mtime":1606722986119,"results":"35","hashOfConfig":"23"},{"size":1108,"mtime":1606722629592,"results":"36","hashOfConfig":"23"},{"size":1825,"mtime":1606731006379,"results":"37","hashOfConfig":"23"},{"size":2131,"mtime":1606468488312,"results":"38","hashOfConfig":"23"},{"size":614,"mtime":1606555531038,"results":"39","hashOfConfig":"23"},{"size":474,"mtime":1606722629600,"results":"40","hashOfConfig":"23"},{"size":4340,"mtime":1606730191710,"results":"41","hashOfConfig":"23"},{"size":586,"mtime":1606565096619,"results":"42","hashOfConfig":"23"},{"size":317,"mtime":1606730443602,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"jiqknd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/home/home.js",[],["95","96"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/App.js",["97"],"import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AuthContextProvider from './context/authenticationContext/authContext';\nimport './styles/semantic-ui-css/semantic.min.css';\nimport Navbar from './components/navbar/Navbar';\nimport PrivateRoute from './components/PrivateRoute';\nimport Loader from './components/loader/Loader';\n\nconst Login = lazy(() => import('./pages/login/login'));\nconst CreatePost = lazy(() => import('./pages/posts/createPost'));\nconst Register = lazy(() => import('./pages/login/register'));\nconst ListPosts = lazy(() => import('./pages/posts/listPosts'));\nconst PostDisplay = lazy(() => import('./pages/posts/postDisplay'));\nconst EditPost = lazy(() => import('./pages/posts/editPost'));\n\nconst LazyLoadComponent = ({ children }) => (\n  <Suspense fallback={<div />}>\n    {children}\n  </Suspense>\n);\n\nfunction App() {\n  return (\n    <AuthContextProvider>\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/login' render={(props) => <LazyLoadComponent><Login {...props} /></LazyLoadComponent>} />\n          <Route exact path='/register' render={(props) => <LazyLoadComponent><Register {...props} /></LazyLoadComponent>} />\n          <PrivateRoute exact path='/createPost' render={(props) => <LazyLoadComponent><CreatePost {...props} /></LazyLoadComponent>} />\n          <PrivateRoute exact path='/myPosts' render={(props) => <LazyLoadComponent><ListPosts {...props} /></LazyLoadComponent>} />\n          <PrivateRoute exact path='/postDisplay/:id' render={(props) => <LazyLoadComponent><PostDisplay {...props} /></LazyLoadComponent>} />\n          <PrivateRoute exact path='/edit/:postID' render={(props) => <LazyLoadComponent><EditPost {...props} /></LazyLoadComponent>} />\n        </Switch>\n      </BrowserRouter>\n    </AuthContextProvider>\n  );\n};\n\nexport default App;",["98","99"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/createPost.js",[],["100","101"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/CreatePostForm.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/createPost.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authContext.js",["102"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/index.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/constants.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/context/authenticationContext/authActions.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/login.js",["103"],"import React, { useContext, useRef } from 'react';\nimport styles from './Login.module.css';\nimport Form from '@bit/react-bootstrap.react-bootstrap.form';\nimport Button from '@bit/semantic-org.semantic-ui-react.button';\nimport { AuthContext } from '../../context/authenticationContext/authContext';\nimport Alert from '@bit/react-bootstrap.react-bootstrap.alert';\nimport { Link } from 'react-router-dom';\n\nconst Login = (props) => {\n\n    const { authStatus, login } = useContext(AuthContext);\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const response = await login(emailRef.current.value, passwordRef.current.value);\n\n        if (response.status === 200) {\n            emailRef.current.disabled = true; passwordRef.current.disabled = true;\n\n            if (props.location.state) {\n                props.history.push(props.location.state.from.pathname);\n            } else {\n                props.history.push('/');\n            }\n        }\n    };\n\n    return (\n        <div className={styles.container}>\n            <div style={{ height: '80vh' }} className='d-flex justify-content-center align-items-center flex-column'>\n                <div className={styles.loginBox}>\n                    <Form onSubmit={(e) => handleSubmit(e)}>\n                        <Form.Group>\n                            <Form.Label htmlFor='email'>Email</Form.Label>\n                            <Form.Control id='email' type='email' required ref={emailRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label htmlFor='email'>Password</Form.Label>\n                            <Form.Control id='password' type='password' required ref={passwordRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button loading={authStatus.isVerifying} disabled={authStatus.isVerifying} fluid type='submit' color='blue'>Login</Button>\n                        </Form.Group>\n                    </Form>\n                    <div className='mt-5'>\n                        <div className='d-flex flex-column justify-content-center'>\n                            <div>\n                                <p>Don't have an account?</p>\n                                <Link to='/register'><a href='#'>Register</a></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {authStatus.isAuthenticated &&\n                    <div className='mt-4'>\n                        <Alert variant='success'>\n                            <p className='pr-2 pl-2'>Login Successfull!</p>\n                        </Alert>\n                    </div>\n                }\n                {authStatus.authenticationError &&\n                    <div className='mt-4'>\n                        <Alert variant='danger'>\n                            <p className='pr-2 pl-2'>There was a problem logging in. Try again.</p>\n                        </Alert>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/login/register.js",["104"],"import React, { useContext, useRef } from 'react';\nimport styles from './Login.module.css';\nimport Form from '@bit/react-bootstrap.react-bootstrap.form';\nimport Button from '@bit/semantic-org.semantic-ui-react.button';\nimport { AuthContext } from '../../context/authenticationContext/authContext';\nimport Alert from '@bit/react-bootstrap.react-bootstrap.alert';\nimport { Link } from 'react-router-dom';\n\nconst Register = (props) => {\n\n    const { authStatus, register } = useContext(AuthContext);\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const usernameRef = useRef();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await register(usernameRef.current.value, emailRef.current.value, passwordRef.current.value);\n\n        emailRef.current.disabled = true; passwordRef.current.disabled = true; usernameRef.current.disabled = true;\n\n        if (props.location.state) {\n            props.history.push(props.location.state.from.pathname);\n        } else {\n            props.history.push('/');\n        }\n    }\n\n    return (\n        <div className={styles.container}>\n            <div style={{ height: '80vh' }} className='d-flex justify-content-center align-items-center flex-column'>\n                <div className={styles.loginBox}>\n                    <Form onSubmit={(e) => handleSubmit(e)}>\n                        <Form.Group>\n                            <Form.Label htmlFor='username'>Username</Form.Label>\n                            <Form.Control id='username' type='text' required ref={usernameRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label htmlFor='email'>Email</Form.Label>\n                            <Form.Control id='email' type='email' required ref={emailRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label htmlFor='email'>Password</Form.Label>\n                            <Form.Control id='password' type='password' required ref={passwordRef} disabled={authStatus.isAuthenticated} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button loading={authStatus.isVerifying} disabled={authStatus.isVerifying} fluid type='submit' color='blue'>Register</Button>\n                        </Form.Group>\n                    </Form>\n                    <div className='mt-5'>\n                        <div className='d-flex flex-column justify-content-center'>\n                            <div>\n                                <p>Already have an account?</p>\n                                <Link to='/login'><a href='#'>Login</a></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {authStatus.isAuthenticated &&\n                    <div className='mt-4'>\n                        <Alert variant='success'>\n                            <p className='pr-2 pl-2'>Register Successfull! You're now Logged In.</p>\n                        </Alert>\n                    </div>\n                }\n                {authStatus.authenticationError &&\n                    <div className='mt-4'>\n                        <Alert variant='danger'>\n                            <p className='pr-2 pl-2'>There was a problem registering. Try again.</p>\n                        </Alert>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Register;","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/PostCard.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/listPosts.js",["105","106","107"],"import Button from '@bit/semantic-org.semantic-ui-react.button';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllPosts } from '../../api/getPosts';\nimport Loader from '../../components/loader/Loader';\nimport PostCard from '../../components/posts/PostCard';\nimport { AuthContext } from '../../context/authenticationContext/authContext';\n\nconst ListPosts = () => {\n\n    const { authStatus } = useContext(AuthContext);\n\n    const [posts, setPosts] = useState({\n        loading: true,\n        posts: [],\n        error: null\n    });\n    const [loadAgain, setLoadAgain] = useState(false);\n\n    useEffect(() => {\n        setPosts((current) => ({ ...current, loading: true }));\n        (async () => {\n            const response = await getAllPosts(authStatus.jwt);\n\n            if (response?.status === 200) {\n                // console.log(response.data);\n                const myPosts = response.data.filter((post) => post.author._id === authStatus.userDetails._id)\n                setPosts({ loading: false, posts: myPosts, error: null });\n                return;\n            }\n\n            setPosts({ loading: false, posts: [], error: response });\n            return;\n        })();\n    }, [loadAgain]);\n\n    if (posts.error) {\n        return (\n            <div className='mt-5 text-center'>\n                <h3 style={{ color: 'red' }} className='text-center'>There was a problem fetching your posts. Try Again.</h3>\n            </div>\n        );\n    }\n\n    if (posts.loading) {\n        return (\n            <Loader />\n        )\n    }\n\n    return (\n        <div className='container'>\n            <h2 className='p-3 text-center mt-3'>My Posts</h2>\n            {!posts.loading && posts.posts.length === 0 &&\n                <div className='mt-5 text-center'>\n                    <h3 className='text-center'>You have no posts.</h3>\n                    <Link to='/createPost'>\n                        <a href='#'>Create One</a>\n                    </Link>\n                </div>\n            }\n            <div className='row no-gutters justify-content-center'>\n                {posts.posts.map((post) => (\n                    <div className='col-10' key={post._id}>\n                        <PostCard post={post} setLoadAgain={setLoadAgain} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default ListPosts;","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/getPosts.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/postDisplay.js",["108"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/navbar/Navbar.js",["109","110"],"import Button from '@bit/semantic-org.semantic-ui-react.button';\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../context/authenticationContext/authContext';\nimport styles from './Navbar.module.css';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n\n    const { logout, authStatus } = useContext(AuthContext);\n\n    return (\n        <div className={styles.container}>\n            <div>\n                <div className='d-flex align-items-center'>\n                    <div>\n                        <Link to='/'>\n                            <img src='/assets/icons/logo.svg' alt='logo' width='90%' />\n                        </Link>\n                    </div>\n                    <div style={{ flexGrow: 1 }} />\n                    <div>\n                        <div className='d-flex align-items-center'>\n                            {authStatus.isAuthenticated ?\n                                <>\n                                    <div className='pr-4 pl-4'>\n                                        <Link to='/createPost'>\n                                            <a href='#'>Create Post</a>\n                                        </Link>\n                                    </div>\n                                    <div className='pr-4 pl-4'>\n                                        <Link to='/myPosts'>\n                                            <a href='#'>My Posts</a>\n                                        </Link>\n                                    </div>\n                                    <div className='pr-4 pl-4'>\n                                        <Button color='red' onClick={() => logout()}>Logout</Button>\n                                    </div>\n                                </>\n                                :\n                                <Link to='/login'>\n                                    <Button secondary>Login</Button>\n                                </Link>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;","/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/pages/posts/editPost.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/api/editPost.js",[],["111","112"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/posts/EditPostForm.js",["113"],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/PrivateRoute.js",[],"/home/hm/Documents/Web Development/Keyway Solutions/assignment/frontend/src/components/loader/Loader.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":14},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},{"ruleId":"114","replacedBy":"124"},{"ruleId":"116","replacedBy":"125"},{"ruleId":"118","severity":1,"message":"126","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":52,"column":54,"nodeType":"129","endLine":52,"endColumn":66},{"ruleId":"127","severity":1,"message":"128","line":55,"column":51,"nodeType":"129","endLine":55,"endColumn":63},{"ruleId":"118","severity":1,"message":"130","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":35,"column":8,"nodeType":"133","endLine":35,"endColumn":19,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"128","line":58,"column":25,"nodeType":"129","endLine":58,"endColumn":37},{"ruleId":"131","severity":1,"message":"135","line":30,"column":8,"nodeType":"133","endLine":30,"endColumn":10,"suggestions":"136"},{"ruleId":"127","severity":1,"message":"128","line":27,"column":45,"nodeType":"129","endLine":27,"endColumn":57},{"ruleId":"127","severity":1,"message":"128","line":32,"column":45,"nodeType":"129","endLine":32,"endColumn":57},{"ruleId":"114","replacedBy":"137"},{"ruleId":"116","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":60,"column":8,"nodeType":"133","endLine":60,"endColumn":10,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar",["141"],["142"],["141"],["142"],"'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authStatus.jwt' and 'authStatus.userDetails._id'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'authStatus.jwt' and 'props.match.params.id'. Either include them or remove the dependency array.",["144"],["141"],["142"],"React Hook useEffect has missing dependencies: 'authStatus.jwt' and 'postID'. Either include them or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [authStatus.jwt, authStatus.userDetails._id, loadAgain]",{"range":"152","text":"153"},"Update the dependencies array to be: [authStatus.jwt, props.match.params.id]",{"range":"154","text":"155"},"Update the dependencies array to be: [authStatus.jwt, postID]",{"range":"156","text":"157"},[1257,1268],"[authStatus.jwt, authStatus.userDetails._id, loadAgain]",[904,906],"[authStatus.jwt, props.match.params.id]",[2206,2208],"[authStatus.jwt, postID]"]